import org.ajoberstar.grgit.operation.OpenOp

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/libs-milestone" }
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.M1")
        classpath("org.ajoberstar:gradle-git:1.1.0")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

description=thisProjectDescription
version=thisProjectVersion

ext.buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")

jar {
    baseName = project.name
    version = project.version
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/libs-milestone" }
    maven { url "http://repo.spring.io/libs-release" }
    mavenLocal()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("com.jayway.jsonpath:json-path:2.0.0")
}

processResources {
    expand(project.properties)
}

task generateGitProperties {
    doLast {
        def openOp = new OpenOp()
        openOp.setDir('.')

        def repo = openOp.call()
        def headCommit = repo.head()
        def gitBranch = repo.branch.current.name
        def gitCommitId = headCommit.abbreviatedId
        def gitCommitTime = new Date(headCommit.time * 1000L).format("yyyy-MM-dd'T'HH:mm:ssZ")
        
        File resourcesMainDir = new File(project.buildDir, 'resources/main')
        File gitPropertiesFile = new File(resourcesMainDir, 'git.properties')
        gitPropertiesFile.text = """git.branch=${gitBranch}
git.commit.id=${gitCommitId}
git.commit.time=${gitCommitTime}
"""
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
//        html.enabled = true // enabled by default
    }
}

project.tasks.jar.dependsOn('generateGitProperties')
